# {{{ Basic Settings
# Set prefix
unbind C-b
set -g prefix `
bind ` send-prefix

set -g update-environment "WAYLAND_DISPLAY"

set -g focus-events on
set -g history-limit 100000
set -g default-command fish
set -g mouse on

# Set base index to 1
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Set vim mode
set -g status-keys vi
set-window-option -g mode-keys vi

set -g aggressive-resize on
set -g escape-time 0
# }}}

# {{{ Window and Pane Management
# Change way of splitting terminals
unbind v
unbind h
unbind %
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical

# Disable confirm before killing
bind-key x kill-pane

# Improve interactive session/window selection
bind-key s choose-tree -NZs -O time
# }}}

# {{{ Copy Mode and Clipboard
# Clipboard support with external program (requires tmux >=3.2)
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-no-clear
set -s copy-command 'xclip -selection clipboard'

bind-key -T copy-mode-vi 's' send-keys -X copy-pipe-and-cancel 'sed s/##/####/g | xargs -I {} tmux run-shell -b "bm add \"{}\""'
# }}}

# {{{ Navigation and Vim Integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?\.?(n?vim?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
# }}}

# {{{ Visual Settings
# colors, clock, and stuff
set-option -ga terminal-overrides ",tmux-256color:Tc"
set -g default-terminal "tmux-256color"
set -g allow-passthrough on
setw -g clock-mode-colour cyan

# Window and pane appearance
set -g window-status-format '#[fg=gray]#I#{?window_last_flag,;,:}#W#{?window_zoomed_flag,[Z],}'
set -g window-status-current-format '#[fd=black]#I:#W#{?window_zoomed_flag,[Z],}'
set -g window-status-activity-style 'fg=blue'

# Pane borders
set -g pane-border-style "fg=#5e5e5e"
set -g pane-active-border-style "fg=#5e5e5e"
# set -g pane-border-lines simple
# set -g pane-border-style "fg=white"
# set -g pane-active-border-style "fg=#5e5e5e"
# set -g pane-border-style "fg=#dddddd"
# set -g display-panes-colour white
# set -g pane-border-status top
# set -g pane-border-indicators colour

set -g popup-border-lines "rounded"
# set -g mode-style "bg=gray"
# }}}

# {{{ Status Bar
# Enable UTF-8 Support
set -g status on
set -gq status-uft8 on

set -g status-style "fg=#665c54"
set -g status-bg default
set -g status-position top
set -g status-left "(#S) "
set -g status-left-length 20
set -g status-right-length 50
set -g status-interval 60
set -g status-right "#(slstatus -s)"

set -g message-style "fg=red"
# }}}

# {{{ Custom Bindings
# Reload on hotkey
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded"

bind y set -w synchronize-panes\; \
    display "panes synchronized: #{?pane_synchronized,ON,OFF}"

bind-key e run 'em-tmux'
bind-key k display-popup -b rounded -w70 -h11 ncal -Mb3
# }}}

# {{{ Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-urlview'

set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '0'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'lynx neomutt'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
# }}}

